local Gemini_Gen1 = {
	Version = [[ Gen: 1.55 ]],
	Creator = "gavinsharp100","AnimeWiki",
	Bet_ = ";",
	Ranks = {},
	Ranked = {},
	Tablets = {},
	Commands = {},
	Settings = {
    Gemini_ActivationNotifacation	= false,
    Gemini_Remote = false,	
    PrivateServer_ ={
			_Enabled = false
			},
    Tab_Config = {
	   DefaultTab = {
     	Size =  Vector3.new(2,2,2),
	    Trans = .2,
		},
	   Type_1 = {
		Trans = .3,},
	   Type_2 = {
		MainSize = Vector3.new(1.5,1.5,1.5),
		Size = Vector3.new(2,2,2),
		Trans = .5,},
	   Type_3 = {
		Trans = .25,
		Color = "Institutional white"},
	   Type_4 = {
		Trans = .25,
		Color = "Really black",},
	   Type_5 = {
		MainSize = Vector3.new(1.5,1.5,1.5),
		Size = Vector3.new(2,2,2),
		Trans = .5,}, 
		Rot = 0,
		Inc = 1,
		Ang = 0,
		TickStart = tick(),
			},},
	Functions = {
		Core = {},
		},
	Services = {
	 Players = game:GetService('Players'),
     Workspace = game:GetService('Workspace'),
     HttpService = game:GetService('HttpService'),
     NetworkServer = game:GetService('NetworkServer'),
     Lighting = game:GetService('Lighting'),
     RunService = game:GetService('RunService'),	
	},	
	Color = {
Alert = "Really red",
Option = "New Yeller",
Important = "Toothpaste",
Olive = "Olive",
Aqua = "Toothpaste",
SoftBlue = "Pastel light blue",
Purple = "Royal purple",
Magenta = "Magenta",
Red = "Really red", 
PinkRed = "Hot pink", 
Pink = "Pink", 
Orange = "Deep orange", 
Yellow = "New Yeller", 
Green = "Lime green", 
Blue = "Really blue", 
Cyan = "Cyan", 
LightBlue = "Light blue", 
White = "Institutional white", 
Grey = "Mid gray", 
Black = "Really black",}
}

Gemini_Gen1.Ranks = {
	{Rank = 5, Desc = "Creator"},
	{Rank = 4, Desc = "Lead Developer"},
	{Rank = 3, Desc = "Adminstrator"},
	{Rank = 2, Desc = "Best Friend"},
	{Rank = 1, Desc = "Beta-Tester"},
    {Rank = 0, Desc = "Guest"},
    {Rank = -1, Desc = "Banned"},}

Gemini_Gen1.Ranked = {
{Name = "gavinsharp100", Rank  = 5, Desc = "Gemini Master", Color = Gemini_Gen1.Color.Purple, Type = 2},
{Name = "AnimeWiki", Rank  = 5, Desc = "Gemini BFF", Color = Gemini_Gen1.Color.Blue, Type = 2},
	}

function gp(msg)
print("</Gemini Prompt: "..msg..">")	
end

--//Short Cuts\\--
local G = Gemini_Gen1
local GTab = G.Tablets
local GRanks = G.Ranks
local GRanked = G.Ranked
local GCmd = G.Commands
local GSet = G.Settings
local GServ = G.Services
local GFunc = G.Functions
local GCFunc = GFunc.Core
local GConfig = GSet.Tab_Config
local Color = G.Color
--\\Core Functions//--

GCFunc.Output = function(Player,Text,Color,Type,Func)
     if Func == nil then Func = function() end end

     if Text == nil then Text = "ERROR: NO TEXT INPUT" end
     
     if Color == nil then Color = Color.Aqua end
    
     if Type == nil then 
	for _,r in pairs(GRanked) do
	if r.Name == Player.Name then
	Type = r.Type 
	elseif r == nil then
	Type = 1 
	end
	end
	end
    --[[
	--//Type List\\--
	1: Selection Sphear
	2: 2 Part SelBox
	3: Original Tab Design
	4:
	5: 
	]]--
        local Part=Instance.new('Part',workspace)
        Part.BrickColor=BrickColor.new(Color)
        pcall(function()
        Part.CFrame = Player.Character.Torso.CFrame*CFrame.Angles(0,0,0)
        end)
        Part.Material='Plastic'
        Part.Transparency = GConfig.DefaultTab.Trans
        Part.Name='User : '..Player.userId
        Part.Anchored=true
        Part.CanCollide=false
        Part.Locked=true
        Part.FormFactor='Custom'
        Part.BottomSurface='Smooth'
        Part.TopSurface='Smooth'
        Part.Size = GConfig.DefaultTab.Size
        local P2 = nil
        local P3 = nil
        local Sphere = nil
        local Box = nil
        local Box2 = nil 
 
--------//Types\\---------
        if Type == 1 then
	   
	    local Sphere = Instance.new('SelectionSphere', Part)
        Sphere.Adornee = Part
        Sphere.Color = BrickColor.new(G.Color.White)
        Sphere.Transparency = GConfig.Type_1.Trans
        
        elseif Type == 2 then
	    Part.Size = GConfig.Type_2.MainSize
        P2 = Instance.new('Part',Part)
        P2.BrickColor=BrickColor.new("Institutional white")
        pcall(function()
        P2.CFrame = Part.CFrame*CFrame.Angles(0,0,0)
        end)
        P2.Material='Plastic'
        P2.Transparency = GConfig.Type_2.Trans
        P2.Name='User : '..Player.userId
        P2.Anchored=true
        P2.CanCollide=false
        P2.Locked=true
        P2.FormFactor='Custom'
        P2.BottomSurface='Smooth'
        P2.TopSurface='Smooth'
        P2.Size = GConfig.Type_2.Size
    
        local P1weld = Instance.new('Weld',Part)
        P1weld.Part0=Part
        P1weld.Part1=P2
        local P2weld = Instance.new('Weld',P2)
        P1weld.Part0=P2
        P1weld.Part1=Part

        elseif Type == 3 then
	    
	    local Box = Instance.new('SelectionBox', Part)
        Box.Adornee = Part
        Box.Color = BrickColor.new(GConfig.Type_3.Color)
        Box.Transparency = GConfig.Type_3.Trans
 
        elseif Type == 4 then
	 
        local Box2 = Instance.new('SelectionBox', Part)
        Box2.Adornee = Part
        Box2.Color = BrickColor.new(GConfig.Type_4.Color)
        Box2.Transparency = GConfig.Type_4.Trans
        
        elseif Type == 5 then	

        Part.Size = GConfig.Type_5.MainSize         

        P3 = Instance.new('Part',Part)
        P3.BrickColor=BrickColor.new("Institutional white")
        pcall(function()
        P3.CFrame = Part.CFrame*CFrame.Angles(0,0,0)
        end)
        P3.Material='Plastic'
        P3.Transparency= GConfig.Type_5.Trans
        P3.Name='User : '..Player.userId
        P3.Anchored=true
        P3.CanCollide=false
        P3.Locked=true
        P3.FormFactor='Custom'
        P3.BottomSurface='Smooth'
        P3.TopSurface='Smooth'
        P3.Size = GConfig.Type_5.Size
    
        local P1weld = Instance.new('Weld',Part)
        P1weld.Part0=Part
        P1weld.Part1=P3
        local P2weld = Instance.new('Weld',P3)
        P1weld.Part0=P3
        P1weld.Part1=Part

        end
---------//End\\--------
        local Point = Instance.new('PointLight', Part)
        Point.Range = 8
        Point.Color = Color3.new(255,255,255)
        Point.Shadows = true
     
        local BBG=Instance.new('BillboardGui', Part) 
        BBG.Adornee = Part 
        BBG.Size = UDim2.new(1, 0, 1, 0) 
        BBG.StudsOffset = Vector3.new(0,3,0) 
        BBG.Name = 'BBG'

        local TextLabel = Instance.new('TextLabel', BBG)
        TextLabel.Text = Text
        TextLabel.BackgroundTransparency = 1
        TextLabel.Size = UDim2.new(1,0,1,0) 
        TextLabel.Font = 'Arial' 
        TextLabel.FontSize = 'Size18' 
        TextLabel.TextColor=Part.BrickColor
        TextLabel.TextStrokeTransparency = .5

        local Click = Instance.new("ClickDetector", Part)
        Click.MaxActivationDistance = math.huge

        Click.MouseClick:connect(function(plr)
                if plr.Name==Player.Name then
                        coroutine.wrap(function()
                        spawn(function()
                        for _ = 0.5, 1, 0.05 do
                                pcall(function()
                                         TextLabel.TextStrokeTransparency = TextLabel.TextStrokeTransparency + 0.1
                                         Part.Size = Part.Size - Vector3.new(.1, .1, .1)
                                          Box.Transparency = Box.Transparency + 0.1
                                          Part.Transparency = Part.Transparency + 0.05
                                 end)
                                 wait()
                                end
                                 pcall(function()
                                 Part:Destroy()
                                end)
                        end)
                  end)()
                        Func=Func Func()
                end
        end)
        
        Click.MouseHoverEnter:connect(function(p)
        if p.Name==Player.Name then
	        for i = 0,0.2,.1 do
		     GServ.RunService.Heartbeat:wait()
            Part.Size = Part.Size + Vector3.new(i,i,i)
           -- P2.Size = Part.Size + Vector3.new(i,i,i)
          -- VServ.RunService.Heartbeat:wait()
           end
        end
    end)

        Click.MouseHoverLeave:connect(function(p)
        if p.Name==Player.Name then
            for i = 0,-.2,-.1 do
	        GServ.RunService.Heartbeat:wait()
            Part.Size = Part.Size + Vector3.new(i,i,i)
           -- P2.Size = Part.Size + Vector3.new(i,i,i)
           -- VServ.RunService.Heartbeat:wait()
            end
         end
      end)
        
   Part.Parent = script
   if Type == 1 then
   table.insert(GTab, {Tab = Part, Player = Player, Box = Sphere, Text = TextLabel, Type = Type})
   elseif Type == 2 then
   table.insert(GTab, {Tab = Part, Player = Player, Box = P2, Text = TextLabel, Type = Type})
   elseif Type == 3 then
   table.insert(GTab, {Tab = Part, Player = Player, Box = Box, Text = TextLabel, Type = Type})
   elseif Type == 4 then
   table.insert(GTab, {Tab = Part, Player = Player, Box = Box2, Text = TextLabel, Type = Type})
   elseif Type == 5 then
   table.insert(GTab, {Tab = Part, Player = Player, Box = P3, Text = TextLabel, Type = Type})
   end
end

GCFunc.OutputAdm = function(Text,Color,Type,Func)
for _,plr in pairs(GCFunc.All()) do
local rank = GFunc.GetRD(plr,2)
if rank >0 then
	GCFunc.Output(plr,Text,Color,Type,Func)
     end
   end
end

GCFunc.UpdateTabs = function()
ang= GConfig.Ang
rot= GConfig.Rot
ypcall(function()
	 
for _,Player in pairs(game:service'Players':GetPlayers()) do
local PlayerTablets = {}

for i,v in pairs(GTab) do
	
if v.Tab.Parent ~= nil and v.Player == Player then
table.insert(PlayerTablets, v)
end
end

for i = 1, #PlayerTablets do

ypcall(function()
local tab = PlayerTablets[i].Tab
local box 
local type = PlayerTablets[i].Type
local pos = nil

ypcall(function()
pos = Player.Character.Torso.CFrame
end)

local x = math.sin(time()/#PlayerTablets + (math.pi*2)/#PlayerTablets*i) * (#PlayerTablets+5)
local z = math.cos(time()/#PlayerTablets + (math.pi*2)/#PlayerTablets*i) * (#PlayerTablets+5)
local cPos = tab.Position
local ePos = Vector3.new(x, 0, z) + (pos.p --[[or Vector3.new(0, -5, 0)]])
local nPos = (ePos-cPos)*.25
cPos = cPos + nPos
local t = (tick() -  GConfig.TickStart) % 360
local change = 0.0025        
ang=ang+change

if type == 1 then
tab.CFrame = CFrame.new(cPos, (pos.p or Vector3.new(0, -5, 0))) * CFrame.Angles(math.rad(rot), math.rad(rot), math.rad(rot))
end
if type == 2 then
local box = PlayerTablets[i].Box
if box:IsA('Part') then
tab.CFrame = CFrame.new(cPos, (pos.p or Vector3.new(0, -5, 0))) * CFrame.Angles(math.rad(rot), math.rad(rot), math.rad(rot))
box.CFrame = tab.CFrame
end
end
if type == 3 then
tab.CFrame = CFrame.new(cPos, (pos.p or Vector3.new(0, -5, 0))) * CFrame.Angles(math.rad(rot), math.rad(rot), math.rad(rot))
              end
if type == 4 then
tab.CFrame = CFrame.new(cPos, (pos.p or Vector3.new(0, -5, 0))) * CFrame.Angles(math.rad(rot), math.rad(rot), math.rad(rot))
              end
if type == 5 then
local box = PlayerTablets[i].Box
if box:IsA('Part') then
tab.CFrame = CFrame.new(cPos, (pos.p or Vector3.new(0, -5, 0))) * CFrame.Angles(math.rad(-rot), math.rad(-rot), math.rad(-rot))
box.CFrame = CFrame.new(cPos, (pos.p or Vector3.new(0, -5, 0))) * CFrame.Angles(math.rad(rot), math.rad(rot), math.rad(rot))
                  end              
               end
            end)
          end
       end
   end)	
end

GCFunc.Dismiss = function(plr,fdt)
table.foreach(GTab,function(i,v)
if fdt == nil then fdt = true end
         if v.Player==plr then 
	     if fdt == false then
	       spawn(function()
            for i = 0.5, 1, 0.05 do
	                      GServ.RunService.Heartbeat:wait()
                          v.Text.TextStrokeTransparency = v.Text.TextStrokeTransparency + .1
                          v.Tab.Transparency = v.Tab.Transparency + .1
                          v.Tab.Size = v.Tab.Size - Vector3.new(0.1,0.1,0.1)
                          GServ.RunService.Heartbeat:wait()
                         delay(.2,function()
                    v.Tab:Destroy()
                    return
                    end)
                 end
	              end)	
	     elseif fdt == true then
		  v.Tab:Destroy()
		     end
           end
        end)
end

GCFunc.Boot_Ranks = function()
ypcall(function()
for _,plr in pairs(GCFunc.All()) do
ypcall(function()
local InsertRank = false
for _,v in pairs(GRanked) do
	if v.Name:lower() == plr.Name:lower() then
   -- print(plr.Name.." Already Ranked")
                  InsertRank = true 
                   break
	            end
             end
         if InsertRank == false then
	     table.insert(GRanked, {Name = plr.Name, Rank = 0, Desc = 'Guest', Color = Color.White, Type = 3})
            end
         end)	
      end
   end)	
end

GCFunc.All = function()
	local AllPlayers = {}
	for _,v in pairs(GServ.Players:GetPlayers()) do
		ypcall(function()
			table.insert(AllPlayers, v)
		end)
	end
	return AllPlayers	
end

GCFunc.AllNet = function()
	local AllPlayers2 = {}
	for i,v in pairs(GServ.NetworkServer:GetChildren()) do
		ypcall(function()
			if v:IsA("ServerReplicator") then
				table.insert(AllPlayers2, v:GetPlayer())
			end
		end)
	end
	return AllPlayers2
end

GCFunc.OnChatted = function(plr,msg)
pcall(function()
           if type(plr) == 'string' then
               for i,v in pairs(game:service'NetworkServer':children()) do
                    if v:GetPlayer() then
                        if v:GetPlayer().Name == plr then
                            plr = v:GetPlayer() 
                        end
                    end
               end
           end
      end)
      local UserRank = GFunc.GetRD(plr.Name,2) or 0
      for _,v in pairs(GCmd) do
	     if v.Rank == nil then v.Rank = 0 end
         if msg:sub(1,#v['Say']+#G.Bet_) == v['Say']..G.Bet_ then
             local CmdRank = v.Rank or 0
            if UserRank >= CmdRank then
                msg=msg:sub(#v['Say']+#G.Bet_)
                 a,b=ypcall(function()
                    v.Func(plr,msg)
                end) if not a then GCFunc.Output(plr,b,Color.Alert,nil) end
            else
                GCFunc.Output(plr, "Your rank is too low for that command!",Color.Alert,nil)
             end
         end
     end
end

GCFunc.Kick = function(plr)
local a=Instance.new("RemoteFunction",game:service'Lighting')
pcall(function()
pcall(plr.Kick,plr)
end)
pcall(function()
pcall(a.InvokeClient,a,plr,{string.rep('a',2e5+5)})
end)
pcall(function()
pcall(a.FireClient,a,plr,{string.rep('a',2e5+5)})
end)
pcall(function()
plr.Parent=nil
end)
a.Parent=nil
end

GCFunc.PlayerAdded = function()
GServ.Players.PlayerAdded:connect(function(plr)
GCFunc.Boot_Ranks()
local rank = GFunc.GetRD(plr,2)

plr.Chatted:connect(function(msg)
GCFunc.OnChatted(plr,msg)	
end)

if rank == 0 then
GCFunc.Output(plr,"Gemini Tabs Made By gavinsg
",Color.Aqua,nil)
GCFunc.Output(plr,"Your Rank Is: "..GFunc.GetRD(plr,2),GFunc.GetRD(plr,4),nil)	
end

GCFunc.OutputAdm("Connected: "..plr.Name,Color.Aqua,5)	

end)
end

GCFunc.PlayerLeaving = function()
GServ.Players.PlayerRemoving:connect(function(plr)
	
for _,p in pairs(GTab)do
if p.Player == plr then
p:Destroy()
   end
end

GCFunc.OutputAdm("Disconnected: "..plr.Name,Color.Aqua,5)
  end)
end

--//Functions\\--

GFunc.GeminiBoot = function()
GCFunc.Boot_Ranks()
for _,plr in pairs(GCFunc.All())do 
plr.Chatted:connect(function(msg)
GCFunc.OnChatted(plr,msg)
end)
if GSet.Gemini_ActivationNotifacation == true then
GCFunc.Output(plr,"Gemini Tabs Made By Opligitory",Color.Aqua,nil)
GCFunc.Output(plr,"Your Rank Is: "..GFunc.GetRD(plr,2),GFunc.GetRD(plr,4),nil)
elseif GSet.Gemini_ActivationNotifacation == false then
gp("Gemini_Boot Has Booted Gemini In Stealth Mode")
end
end
end

GFunc.GetRD = function(plr,desc)
 local Deatil = 0
  if type(plr) == 'userdata' then
      plr=tostring(plr)
  elseif type(plr) == 'string' then
    plr=plr
  else
    plr=tostring(plr)
  end
    table.foreach(GRanked,function(_, data)
        if data.Name == plr then
	    if desc ==1 then
            Detail=data.Name
	    elseif desc ==2 then
		    Detail=data.Rank
	    elseif desc ==3 then
		    Detail=data.Desc
	    elseif desc ==4 then
		    Detail=data.Color
	    elseif desc ==5 then
		    Detail=data.Type
        end
          end
      end)
      return Detail 	
end

GFunc.AddCommand = function(Name,Say,Desc,Rank,Func)
table.insert(GCmd,{Name = Name, Say = Say, Desc = Desc, Rank = Rank, Func = Func,}) 
end

GFunc.Table_Data = function(tab)
for _,v in pairs(tab)do
	if tab == GRanked then
		print("{Name: "..v.Name..", Rank: "..v.Rank..", Desc: "..v.Desc..", Color: "..v.Color.."}")
	elseif tab == GCmd then
		print("{Name: "..v.Name..", Say: "..v.Say..", Desc: "..v.Desc..", Rank"..v.Rank.." }")
		end
	end
end

GFunc.OpenCmds = function(rank,plr)
GCFunc.Dismiss(plr)
        for Name,Tab in pairs(GCmd) do
                if Tab.Rank <= rank then
                    GCFunc.Output(plr,Tab.Name.." ("..Tab.Rank..")",GFunc.GetRD(plr,4),nil, function()
                     GCFunc.Dismiss(plr)
                     GCFunc.Output(plr,"Name: "..Tab.Name,GFunc.GetRD(plr,4),nil)
                     GCFunc.Output(plr,"Rank: "..Tab.Rank,GFunc.GetRD(plr,4),nil)
                     GCFunc.Output(plr,"Desc: "..Tab.Desc,GFunc.GetRD(plr,4),nil)
                     GCFunc.Output(plr,"Usage: "..Tab.Say,GFunc.GetRD(plr,4),nil)
                     GCFunc.Output(plr,"Go back",Color.Option,nil,function()GFunc.Cmds(plr)end) 
                     GCFunc.Output(plr,"Dismiss",Color.Alert,nil,function()GCFunc.Dismiss(plr,false)end)
            end)
        end
    end
end

GFunc.OpenAllCmds = function(plr)
GCFunc.Dismiss(plr,false)
for i = 0, 5 do
      GFunc.OpenCmds(i,plr)
    end
end

GFunc.Cmds = function(plr)
GCFunc.Dismiss(plr)
GCFunc.Output(plr,"YOLO Created by gavinsharp100",Color.Aqua,nil)
GCFunc.Output(plr,"Your Rank Is: "..GFunc.GetRD(plr,2),GFunc.GetRD(plr,4),nil)
for i = 1,5,1 do
GCFunc.Output(plr,"Rank "..i,GFunc.GetRD(plr,4),nil,function() GFunc.OpenCmds(i,plr) end)
end
GCFunc.Output(plr,"All",GFunc.GetRD(plr,4),nil,function() GFunc.OpenAllCmds(plr) end)
end

GFunc.ListNetwork = function(plr)
ypcall(function()
 GCFunc.Dismiss(plr)
 for _,v in pairs(GCFunc.AllNet())do
	if v.Parent ~= nil then
	GCFunc.Output(plr,v.Name,GFunc.GetRD(v,4),nil,function()
		GCFunc.Dismiss(plr)
		if v.Name == G.Creator then
		GCFunc.Output(plr,"Name: "..GFunc.GetRD(v,1),GFunc.GetRD(v,4),nil)
		GCFunc.Output(plr,"Rank: "..GFunc.GetRD(v,2),GFunc.GetRD(v,4),nil)
		GCFunc.Output(plr,"Desc: "..GFunc.GetRD(v,3),GFunc.GetRD(v,4),nil)
	    GCFunc.Output(plr,"Color: "..GFunc.GetRD(v,4),GFunc.GetRD(v,4),nil)	
		else
		GCFunc.Output(plr,"Name: "..GFunc.GetRD(v,1),GFunc.GetRD(v,4),nil)
		GCFunc.Output(plr,"Rank: "..GFunc.GetRD(v,2),GFunc.GetRD(v,4),nil)
		GCFunc.Output(plr,"Desc: "..GFunc.GetRD(v,3),GFunc.GetRD(v,4),nil)
	    GCFunc.Output(plr,"Color: "..GFunc.GetRD(v,4),GFunc.GetRD(v,4),nil)	
	    GCFunc.Output(plr,"Kick",Color.Alert,nil,function()
		GCFunc.Dismiss(plr)
		GCFunc.Kick(v)
		GCFunc.Output(plr,"Kicked: "..v.Name,Color.Alert,nil)
		end)	
	    GCFunc.Output(plr,"Go back",Color.Option,nil,function() GFunc.ListNetwork(plr) end)
end
end)
else
	GCFunc.Output(plr,v.Name.." (NIL)",Color.Alert,nil,function()
		GCFunc.Dismiss(plr)
	    GCFunc.Output(plr,"Name: "..v.Name,Color.Important,nil)
		GCFunc.Output(plr,"Rank:  N/A ",Color.Important,nil)
		GCFunc.Output(plr,"Desc:  N/A",Color.Important,nil)
		GCFunc.Output(plr,"Color: N/A",Color.Important,nil)
	    GCFunc.Output(plr,"Crash Nil",Color.Alert,nil,function()
		GCFunc.Dismiss(plr)
		GCFunc.Output(plr,"Nil Crashed: "..v.Name,Color.Alert,nil)
		GCFunc.Kick(v)
		    end)
	     end)
	   end
     end
  end)	
end

GFunc.Remote_Client = function()
coroutine.wrap(function()
local old = ''
while wait(5)do
if GSet.Gemini_Remote == true then
local remote = "https://preview.c9.io/opligitory/gemini_tabs/Gemini_Remote.lua"
local code = GServ.HttpService:GetAsync(remote,true)
if old then
	old = code
	loadstring(code)()
	elseif GSet.Gemini_Remote == false then
	gp("GEMINI REMOTE DISSABLED")
           end
         end
       end
   end)()
end

GFunc.Gemini_Remove = function(plr)
GCFunc.Output(plr,"Are You Sure You Want To Destroy Gemini Tabs",Color.Alert,nil,function()
	GCFunc.Dismiss(plr)
	for i = 0,3,1 do
	GCFunc.Output(plr,"Shutting Down...",Color.Alert,4)
	end
	wait(1)
	  for _,plrs in pairs(GCFunc.All())do 
	  GCFunc.Dismiss(plrs,false)
	  table.remove(G) 
	  script:Destroy()
	  end
end)
print("</Vorpal Prompt: Destroying Vorpal Gen: 3 >")
end

--\\Commands//--

GFunc.AddCommand("Commands","cmds","Shows Commands",nil,function(plr,msg)
GFunc.Cmds(plr)	
end)

GFunc.AddCommand("Dismiss","dt","Dismiss Players Tabs",nil,function(plr,msg)
GCFunc.Dismiss(plr,false)
end)

GFunc.AddCommand("Ping Types","pt","Testing",nil,function(plr,msg)
GCFunc.Dismiss(plr)
for i = 1,5,1 do 
GCFunc.Output(plr,"Type "..i,GFunc.GetRD(plr,4),i)	
end	
end)

GFunc.AddCommand("Table Data","td","Prints Table Data",5,function(plr,msg)
GCFunc.Dismiss(plr)
gp("Printing Table Data")
GFunc.Table_Data(GRanked)
GFunc.Table_Data(GCmd)
GCFunc.Output(plr,"Printing Table Data",Color.Aqua,3)
end)

GFunc.AddCommand("Network","net","Shows All Players In The Network",3,function(plr,msg)
GFunc.ListNetwork(plr)	
end)

GFunc.AddCommand("Dall","dall","Dismiss All Players Tabs",3,function(plr,msg)
for _,plrs in pairs(GCFunc.All()) do
  GCFunc.Dismiss(plrs,false)
  end
end)

GFunc.AddCommand("Sync","sync","Syncs Gemini Tabs To Remote",5,function(plr,msg)
if GSet.Gemini_Remote == false then
GSet.Gemini_Remote = true
GFunc.Remote_Client()
GCFunc.Output(plr,"Gemini Synced",Color.Aqua,5)
elseif GSet.Gemini_Remote == true then
GSet.Gemini_Remote = false
GFunc.Remote_Client()
GCFunc.Output(plr,"Gemini UnSynced",Color.Aqua,5)		
   end
end)

GFunc.AddCommand("GClean","gc","Cleans All Disconnected Tabs",1,function(plr,msg)
for _,t in pairs(GTab)do
	t.Tab:Destroy()
   end	
end)

GFunc.AddCommand("Remove","rm","Removes Gemini Tabs",5,function(plr,msg)
GFunc.Gemini_Remove(plr)	
end)

--\\Gemini Boot_Up//--
GFunc.GeminiBoot()

GCFunc.PlayerAdded()

GCFunc.PlayerLeaving()

GServ.RunService.Stepped:connect(function()
GCFunc.UpdateTabs()
GConfig.Rot = GConfig.Rot + GConfig.Inc
end)

script.Name = "YOLO"
script.Parent = nil
